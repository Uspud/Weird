/*
문제
BOJ 연방은 2022년을 맞아 신도시를 지으려고 한다. BOJ 연방의 건설가는 동서 방향과 남북 방향으로 길게 뻗어 격자 모양으로 교차하는 도로를 $8 \times 10^{8}$ 개씩 세웠으며, 인접한 두 교차로 사이의 거리는 $1$이다. 북쪽에서 $x$ 번째 도로와 동쪽에서 $y$ 번째 도로의 교차로는 $(x, y)$라고 부른다. 도로를 따라서는 동서 혹은 남북 방향으로만 이동할 수 있기 때문에, $(x, y)$에서 $(z, w)$까지의 거리는 $|x-z|+|y-w|$로 계산된다.

이제 랜드마크를 지어서 이 신도시의 완성을 기념하려고 한다. 연방의 초청을 받은 세 명의 예술가는 교차로를 하나씩 정해서 랜드마크를 건설하기로 했다. 각 랜드마크의 매력도 중요하지만, 랜드마크끼리의 조화도 빼놓을 수 없다. 세 랜드마크가 조화를 이루려면, 다음 조건을 모두 만족해야 한다.

첫 번째 랜드마크가 있는 교차로와 두 번째 랜드마크가 있는 교차로 사이의 거리는 $a$이다.
두 번째 랜드마크가 있는 교차로와 세 번째 랜드마크가 있는 교차로 사이의 거리는 $b$이다.
세 번째 랜드마크가 있는 교차로와 첫 번째 랜드마크가 있는 교차로 사이의 거리는 $c$이다.
세 랜드마크가 조화를 이룰 수 있도록 각 랜드마크를 짓는 교차로의 위치를 정해주자.

입력
입력은 $T$개의 테스트 케이스로 이루어져 있다.

첫 번째 줄에 전체 테스트 케이스의 개수를 나타내는 정수 $T$가 주어진다.

이후 $T$ 개의 줄에 랜드마크 사이의 거리를 나타내는 세 개의 정수 $a$, $b$, $c$가 공백으로 구분되어 한 줄에 주어진다.

출력
?$T$ 개의 줄에 걸쳐 한 줄에 하나씩 문제의 답을 출력해야 한다.

세 랜드마크가 조화를 이룰 수 있다면, 여섯 개의 정수 $x_1$, $y_1$, $x_2$, $y_2$, $x_3$, $y_3$를 공백으로 구분하여 출력한다. 이는 첫 번째, 두 번째, 세 번째 랜드마크를 각각 $(x_1, y_1)$; $(x_2, y_2)$; $(x_3, y_3)$에 건설한다는 의미이다. 답이 여러 가지가 가능하다면 그 중 하나를 출력하라.

세 랜드마크가 조화를 이룰 수 없다면, $-1$을 출력한다.

제한
?$1 \leq T \leq 10^5$?
?$1 \leq a, b, c \leq 10^{9}$?
입력으로 주어지는 모든 수는 정수다.
?$1 \leq x_1, y_1, x_2, y_2, x_3, y_3 \leq 8 \times 10^{8}$?
출력해야 하는 모든 수는 정수다.
*/

#include <iostream>
#include <cmath>

#define fastio ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);   // 입출력 빠르게 하기

using namespace std;

int main(void) {
    fastio;

    int t; cin >> t;

    int a, b, c;
    int max = 8 * pow(10,8) - 1;
    int pos_a[2] = {1, 1}, pos_b[2], pos_c[2];

    for(int i = 0; i < t; i++) {
        cin >> a >> b >> c;

        if

        int a_x, a_y, b_x, b_y, c_x, c_y;
        if(a > max) {
            a_x = max;
            a_y = a - max;
        }
    }

    return 0;
}